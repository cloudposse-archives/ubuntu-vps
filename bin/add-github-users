#!/bin/bash

if [ -z "$VPS_GITHUB_USERS" ]; then
  echo "VPS_GITHUB_USERS not set"
  exit 1
fi

echo "Configuring GitHub Users '$VPS_GITHUB_USERS'"

for USERNAME in $(echo "$VPS_GITHUB_USERS" | tr ', ' '\n'); do 
  GROUP=$USERNAME
  USER_HOME="/home/$USERNAME"
  SSH_CONFIG_DIR="$USER_HOME/.ssh"
  SSH_AUTHORIZED_KEYS="$SSH_CONFIG_DIR/authorized_keys"

  id $USERNAME 2>/dev/null
  if [ $? -ne 0 ]; then
    echo "Adding user $USERNAME"
    useradd --password "*" --create-home "$USERNAME" --shell /bin/bash 2> /dev/null
  fi

  [ -d "$SSH_CONFIG_DIR" ] || mkdir -p "$SSH_CONFIG_DIR" -m 0700

  echo "Updating authorized_keys for $USERNAME"
  curl --silent "https://api.github.com/users/$USERNAME/keys" | grep '"key":' | cut -d'"' -f4 > "$SSH_AUTHORIZED_KEYS"

  if [ ! -f "$SSH_CONFIG_DIR/config" ]; then
    echo "Creating default ssh config for $USERNAME"
    echo -e '\nHost *\n  StrictHostKeyChecking no\n  UserKnownHostsFile=/dev/null' >> "$SSH_CONFIG_DIR/config"
  fi

if [ -n "${DB_USER:-}" ]; then
cat<< __EOF__ >"$USER_HOME/.my.cnf"
[client]
user=${DB_USER:-}
password=${DB_PASS:-}
database=${DB_NAME:-}
host=${DB_HOST:-}
__EOF__
fi


  if [ "$VPS_ENABLE_SUDO" == "true" ]; then 
    echo "Enabling sudo for $USERNAME"
    sudo usermod -aG sudo "$USERNAME"
  fi

  (chown "$USERNAME:$GROUP" -R "$USER_HOME")&

  # Run a local provisioner if one provided
  if [ -x "$USER_HOME/.bootstrap" ]; then
    echo "Running bootstrap script"
    (sudo -u "$USERNAME" "$USER_HOME/.bootstrap")&
  fi

done
